{"version":3,"sources":["webpack:///./cli/src/$_lazy_route_resource lazy namespace object","webpack:///./cli/src/app/app-routing.module.ts","webpack:///./cli/src/app/app.component.ts","webpack:///./cli/src/app/app.module.ts","webpack:///./cli/src/app/imagegallery/component/imagegallery.component.ts","webpack:///./cli/src/app/imagegallery/service/imagegallery.service.ts","webpack:///./cli/src/app/imagegallery/views/imagegallery.component.html","webpack:///./cli/src/environments/environment.ts","webpack:///./cli/src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./cli/src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { ImageGalleryComponent } from \"./imagegallery/component/imagegallery.component\";\n\nconst routes: Routes = [\n  {\n    path: \"imagegallery\",\n    component: ImageGalleryComponent,\n  },\n  {\n    path: \"\",\n    redirectTo: \"imagegallery\",\n    pathMatch: \"full\"\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRouterModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<div>\n              <image-gallery></image-gallery>\n            </div>`\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\n\n// Router Module\nimport { AppRouterModule } from './app-routing.module';\n\n// ngx image gallery library\nimport { NgxGalleryModule } from 'ngx-gallery';\n\n// application components.\nimport { AppComponent } from './app.component';\nimport { ImageGalleryComponent } from './imagegallery/component/imagegallery.component';\n\n// image service\nimport { ImageGalleryService } from \"./imagegallery/service/imagegallery.service\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ImageGalleryComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgxGalleryModule,\n    HttpClientModule,\n    AppRouterModule\n  ],\n  providers: [ImageGalleryService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { ImageGalleryService } from \"../service/imagegallery.service\";\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\n\n@Component({\n  selector: \"image-gallery\",\n  templateUrl: \"../views/imagegallery.component.html\"\n})\nexport class ImageGalleryComponent implements OnInit, OnDestroy {\n\n  protected errMsg: string;\n  protected galleryOptions: NgxGalleryOptions[];\n  protected galleryImages: NgxGalleryImage[] = [];\n\n  constructor(\n    private imageGalleryService: ImageGalleryService\n  ) {}\n\n  ngOnInit() {\n    // initial image gallery configuration.\n    this.galleryOptions = [\n      {\n          image: false,\n          height: '80vh',\n          width: '77vw',\n          thumbnailsRemainingCount: true,\n          thumbnailsRows: 4\n      },\n      {\n          breakpoint: 100,\n          width: '100%',\n          thumbnailsColumns:4\n      }\n    ];\n    this.getProfiles();\n  }\n\n  // Fetch data from api \n  getProfiles = function(tags:string = \"\") {\n    this.errMsg = '';\n    document.getElementById(\"loading\").classList.remove(\"display-none\");\n    this.imageGalleryService.getFeeds(tags).subscribe(\n      data => {\n        this.galleryImages = [];\n        data.map(img =>{  // Map image url to galleryImage obj.\n          this.galleryImages.push({\n            medium: img.media.m, \n            big: img.media.m, \n            small: img.media.m\n          });\n        })\n        document.getElementById(\"loading\").classList.add(\"display-none\");\n      },\n      err => {\n        console.log(err);\n        if (err && err.error!.errorMsg != \"\") {\n          this.errMsg = err.error!.errorMsg;\n        } else {\n          this.errMsg = \"Unknown error occurred\";\n        }\n        document.getElementById(\"loading\").classList.add(\"display-none\");\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    // release resource consumed.\n    this.errMsg = \"\";\n    this.galleryImages = [];\n    this.galleryOptions = [];\n    this.getProfiles = null;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient,HttpHeaders, HttpClientModule  } from \"@angular/common/http\";\nimport { environment } from \"../../../environments/environment\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class ImageGalleryService {\n  \n  constructor(private http: HttpClient) {}\n\n  /** \n   *  To fetch public feed using tags as user input\n   *  @param tags \n   *  @returns array of object of filcker feeds.\n   */  \n  getFeeds(\n    tags: string,\n  ): Observable<any> {\n    \n    let url = `${environment[\"baseUrl\"]}/getFeeds`;\n    let params = {\n      tags: tags,\n    };\n\n    return this.http.get<any>(url, {params: params});\n  }\n\n  \n}\n","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12 col-md-12\\\">\\n            <h1 class=\\\"text-center header\\\">Flicker Public Feeds.</h1>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-12\\\">\\n            <div class=\\\"input-group mb-3\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" ref-search (keyup.enter)=\\\"getProfiles(search.value)\\\" placeholder=\\\"Search photos, people, or groups\\\" aria-label=\\\"Search photos, people, or groups\\\" id=\\\"inp-search\\\">\\n                <div class=\\\"input-group-append\\\">\\n                    <button class=\\\"btn btn-outline-secondary\\\" on-click=\\\"getProfiles(search.value)\\\" type=\\\"button\\\" id=\\\"btn-search\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                </div>\\n            </div>   \\n        </div>\\n        <div class=\\\"col-sm-12 col-md-12\\\">\\n            <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>  \\n        </div>\\n    </div>\\n</div>\"","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:3000'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}